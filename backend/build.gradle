plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'org.flywaydb.flyway' version '9.4.0'
}

group = 'deu.ac.kr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations.all {
	exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
}

checkstyle {
	maxWarnings = 0
	configFile = file("${rootDir}/config/gpu-im-checkstyle.xml")
}

sourceSets {
	integrationTest {
		java.srcDir "$projectDir/src/integrationTest/java"
		resources.srcDir "$projectDir/src/integrationTest/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	integrationTestImplementation.extendsFrom implementation
	integrationTestImplementation.extendsFrom testImplementation
	intgrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
	// SpringBoot
	implementation 'org.springframework.boot:spring-boot:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// AspectJ
	implementation 'org.aspectj:aspectjweaver:1.9.9.1'
	implementation 'org.aspectj:aspectjrt:1.9.9.1'

	// AssertJ
	testImplementation('org.assertj:assertj-core:3.23.1')

	// lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.0'

	// MariaDB JDBC Driver
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.6'
	testImplementation 'org.mariadb.jdbc:mariadb-java-client:3.0.6'

	// MariaDB4J
	testImplementation 'ch.vorburger.mariaDB4j:mariaDB4j-springboot:2.5.3'

	// jackson dataformat serializer
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.3'

	// Sentry
	implementation 'io.sentry:sentry-log4j2:6.3.0'
	implementation 'io.sentry:sentry-spring-boot-starter:6.3.0'

	// Flyway DB
	implementation 'org.flywaydb:flyway-core' // Downgraded to 8 because spring still not support 9
	implementation 'org.flywaydb:flyway-mysql'

	// Junit4
	testImplementation(platform('org.junit:junit-bom:5.8.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation('junit:junit:4.13.2')
	testImplementation 'org.springframework:spring-test:5.3.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
	testImplementation 'org.assertj:assertj-core:3.23.1'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	testLogging {
		events "failed"
		exceptionFormat "full"
	}
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	useJUnitPlatform()
}

check.dependsOn integrationTest
